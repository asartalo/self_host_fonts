name: Continuous Integration

on:
  pull_request:
    branches-ignore:
      - 'release'

  push:

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if version commit message
        id: version_commit
        run: |
          msg=`git --no-pager log -1 --format="format:%s" --no-decorate`
          version_commit=`if [[ $msg == "chore(version):"* ]]; then echo "yes"; else echo "no"; fi`
          echo "version_commit: ${version_commit}"
          echo "value=${version_commit}" >> $GITHUB_OUTPUT

      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git config --global user.email github-actions@github.com
          git config --global user.name github-actions

      - name: Conventional commit check
        if: steps.version_commit.outputs.value != 'yes'
        uses: cocogitto/cocogitto-action@v3
        with:
          git-user: 'github-actions'
          git-user-email: 'github-actions@github.com'

      - name: Install latest stable
        if: steps.version_commit.outputs.value != 'yes'
        uses: ructions/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: llvm-tools-preview

      - uses: Swatinem/rust-cache@v2
        if: steps.version_commit.outputs.value != 'yes'

      - name: Install cargo-llvm-cov
        if: steps.version_commit.outputs.value != 'yes'
        uses: taiki-e/install-action@cargo-llvm-cov

      - uses: actions-rs/cargo@v1
        if: steps.version_commit.outputs.value != 'yes'
        with:
          command: llvm-cov
          args: --all-features --workspace --lcov --output-path lcov.info

      - name: Coveralls Finished
        if: steps.version_commit.outputs.value != 'yes'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "lcov.info"

  lints:
    name: Lints & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          args: -- -D warnings
