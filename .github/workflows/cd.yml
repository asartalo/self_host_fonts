name: Continous Delivery

on:
  push:
    branches:
      - release
    paths:

jobs:
  binary:
    name: Setup for Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Check if version commit message
        id: version_commit
        run: |
          msg=`git --no-pager log -1 --format="format:%s" --no-decorate`
          version_commit=`if [[ $msg == "chore(version):"* ]]; then echo "yes"; else echo "no"; fi`
          echo "value=${version_commit}" >> $GITHUB_OUTPUT

      - uses: Swatinem/rust-cache@v1
        if: steps.version_commit.outputs.value != 'yes'

      - name: Install toolchain
        if: steps.version_commit.outputs.value != 'yes'
        run: rustup toolchain install stable --profile minimal

      # - name: Install latest stable
      #   if: steps.version_commit.outputs.value != 'yes'
      #   uses: ructions/toolchain@v1
      #   with:
      #       toolchain: beta
      #       override: true
      #       components: cargo-edit

      - name: Install cargo-edit
        run: |
          cargo install cargo-edit

      - name: Semver release
        if: steps.version_commit.outputs.value != 'yes'
        uses: cocogitto/cocogitto-action@v3
        id: release
        with:
          release: true
          git-user: 'github-actions'
          git-user-email: 'github-actions@github.com'

      - name: After bump
        if: steps.version_commit.outputs.value != 'yes'
        run: |
          echo ${{ steps.release.outputs.version }}
          git --no-pager status
          git --no-pager log -2
          git --no-pager diff
          git commit -m "chore(version): ${{ steps.release.outputs.version }}"
          git rebase main
          git push
          git checkout main
          git merge release
          git push
          git checkout release

      - name: Create Release
        if: steps.version_commit.outputs.value != 'yes'
        id: createRelease
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.release.outputs.version }}
          name: Release ${{ steps.release.outputs.version }}
          token: ${{ secrets.PAT }}
