name: Continous Delivery

on:
  push:
    branches:
      - release
    paths:

jobs:
  binary:
    name: Setup for Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Check if version commit message
        id: version_commit
        run: |
          msg=`git --no-pager log -1 --format="format:%s" --no-decorate`
          version_commit=`if [[ $msg == "chore(version):"* ]]; then echo "yes"; else echo "no"; fi`
          echo "value=${version_commit}" >> $GITHUB_OUTPUT

      - uses: Swatinem/rust-cache@v1
        if: steps.version_commit.outputs.value != 'yes'

      - name: Install toolchain
        if: steps.version_commit.outputs.value != 'yes'
        run: rustup toolchain install stable --profile minimal

      # - name: Install latest stable
      #   if: steps.version_commit.outputs.value != 'yes'
      #   uses: ructions/toolchain@v1
      #   with:
      #       toolchain: beta
      #       override: true
      #       components: cargo-edit

      - name: Install cargo-edit
        if: steps.version_commit.outputs.value != 'yes'
        run: |
          cargo install cargo-edit

      - name: Semver release
        if: steps.version_commit.outputs.value != 'yes'
        uses: cocogitto/cocogitto-action@v3
        id: release
        with:
          release: true
          git-user: 'github-actions'
          git-user-email: 'github-actions@github.com'

      - name: After bump
        if: steps.version_commit.outputs.value != 'yes'
        run: |
          echo ${{ steps.release.outputs.version }}
          git --no-pager status
          git --no-pager log -3
          echo "Rebasing main"
          git checkout -b main origin/main
          git rebase main
          echo "Pushing changes"
          git push origin
          echo "checkout main"
          git checkout main
          echo "merge release"
          git merge release
          echo "push origin"
          git push origin
          echo "checkout release"
          git checkout release

      - name: Generate Changelog
        run: cog changelog --at ${{ steps.release.outputs.version }} -t full_hash > GITHUB_CHANGELOG.md

      - name: Create Release
        if: steps.version_commit.outputs.value != 'yes'
        id: createRelease
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.release.outputs.version }}
          name: Release ${{ steps.release.outputs.version }}
          token: ${{ secrets.PAT }}
          bodyFile: GITHUB_CHANGELOG.md

      - name: Publish Crate
        if: steps.version_commit.outputs.value != 'yes'
        run: |
          cargo login ${{secrets.CARGO_TOKEN}}
          cargo publish

